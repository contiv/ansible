---
# This role contains tasks for configuring and starting docker service

# XXX: figure a way to download a specific docker version
- name: install docker
  shell: creates=/usr/bin/docker curl https://get.docker.com | bash
  tags:
    - prebake-for-dev

- name: create docker daemon's config directory
  file: path=/etc/systemd/system/docker.service.d state=directory
  tags:
    - prebake-for-dev

- name: setup docker daemon's environment
  template: src=env.conf.j2 dest=/etc/systemd/system/docker.service.d/env.conf
  tags:
    - prebake-for-dev

- name: copy systemd units for docker(enable cluster store) (debian)
  template: src=docker-svc.j2 dest=/lib/systemd/system/docker.service
  when: ansible_os_family == "Debian"

- name: copy systemd units for docker(enable cluster store) (redhat)
  template: src=docker-svc.j2 dest=/usr/lib/systemd/system/docker.service
  when: ansible_os_family == "RedHat"

- name: check docker-tcp socket state
  shell: systemctl status docker-tcp.socket | grep "Active:"
  register: docker_tcp_socket_state

- name: copy systemd units for docker tcp socket settings
  template: src=docker-tcp.j2 dest=/etc/systemd/system/docker-tcp.socket
  register: docker_tcp_socket

  # tcp socket service requires docker service to be started after it
- name: start docker tcp socket service
  shell: sudo systemctl stop docker && sudo systemctl start docker-tcp.socket && sudo systemctl start docker
  when: (docker_tcp_socket | changed) or not docker_tcp_socket_state.stdout | match("Active.* active")

- name: remove the docker key file, if any. It shall be regenerated by docker on restart
  file: name=/etc/docker/key.json  state=absent

# XXX: service module doesn't do daemon-reload yet, so need to use shell module here
# https://github.com/ansible/ansible-modules-core/issues/191
- name: restart docker
  #service: name=docker state=restarted
  shell: sudo systemctl daemon-reload && sudo systemctl restart docker
  tags:
    - prebake-for-dev

- name: check docker-compose version
  shell: docker-compose --version
  register: docker_compose_version
  ignore_errors: yes
  tags:
    - prebake-for-dev

- name: download and install docker-compose
  get_url:
    validate_certs: "{{ validate_certs }}"
    url: https://github.com/docker/compose/releases/download/1.5.2/docker-compose-{{ ansible_system }}-{{ ansible_userspace_architecture }}
    dest: /usr/bin/docker-compose
    mode: u=rwx,g=rx,o=rx
  when: docker_compose_version.stdout != "docker-compose version 1.5.2, build 7240ff3"
  tags:
    - prebake-for-dev

- name: check contiv-compose version
  shell: contiv-compose --version
  register: contiv_compose_version
  ignore_errors: yes
  tags:
    - prebake-for-dev

- name: download contiv-compose
  get_url:
    validate_certs: "{{ validate_certs }}"
    url: https://cisco.box.com/shared/static/eagplmveetdmwn7u2uwadna07l1m8t3s.bz2
    dest: /tmp/contiv-compose.bz2
  when: docker_compose_version.stdout != "libcompose-cli version 0.0.0-dev (4c0c2dd)"
  tags:
    - prebake-for-dev

- name: install contiv-compose
  shell: tar vxjf /tmp/contiv-compose.bz2
  args:
    chdir: /usr/bin/
    creates: contiv-compose
  when: docker_compose_version.stdout != "libcompose-cli version 0.0.0-dev (4c0c2dd)"
  tags:
    - prebake-for-dev
